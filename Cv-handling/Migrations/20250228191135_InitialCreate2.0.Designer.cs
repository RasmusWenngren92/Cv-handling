// <auto-generated />
using System;
using Cv_handling.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cv_handling.Migrations
{
    [DbContext(typeof(CvDbContext))]
    [Migration("20250228191135_InitialCreate2.0")]
    partial class InitialCreate20
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cv_handling.Models.Education", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EducationId"));

                    b.Property<DateOnly>("GraduationDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsAlumni")
                        .HasColumnType("bit");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SchoolTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("EducationId");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("Cv_handling.Models.Experience", b =>
                {
                    b.Property<int>("ExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExperienceId"));

                    b.Property<int>("EducationIdFk")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WorkIdFk")
                        .HasColumnType("int");

                    b.HasKey("ExperienceId");

                    b.HasIndex("EducationIdFk");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkIdFk");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("Cv_handling.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int>("EducationIdFk")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("WorkIdFk")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("EducationIdFk");

                    b.HasIndex("WorkIdFk");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Cv_handling.Models.Work", b =>
                {
                    b.Property<int>("WorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkId"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("Duration")
                        .HasColumnType("date");

                    b.Property<string>("WorkTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WorkId");

                    b.ToTable("Work");
                });

            modelBuilder.Entity("Cv_handling.Models.Experience", b =>
                {
                    b.HasOne("Cv_handling.Models.Education", "Education")
                        .WithMany("Experiences")
                        .HasForeignKey("EducationIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cv_handling.Models.User", null)
                        .WithMany("Experiences")
                        .HasForeignKey("UserId");

                    b.HasOne("Cv_handling.Models.Work", "Work")
                        .WithMany("Experiences")
                        .HasForeignKey("WorkIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");

                    b.Navigation("Work");
                });

            modelBuilder.Entity("Cv_handling.Models.User", b =>
                {
                    b.HasOne("Cv_handling.Models.Education", "Education")
                        .WithMany("Users")
                        .HasForeignKey("EducationIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cv_handling.Models.Work", "Work")
                        .WithMany("Users")
                        .HasForeignKey("WorkIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");

                    b.Navigation("Work");
                });

            modelBuilder.Entity("Cv_handling.Models.Education", b =>
                {
                    b.Navigation("Experiences");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Cv_handling.Models.User", b =>
                {
                    b.Navigation("Experiences");
                });

            modelBuilder.Entity("Cv_handling.Models.Work", b =>
                {
                    b.Navigation("Experiences");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
